!function(){"use strict";const t=["precision mediump float;","void main(void){","float test = 0.1;","%forloop%","gl_FragColor = vec4(0.0);","}"].join("\n");function e(t){let e="";for(let i=0;i<t;++i)i>0&&(e+="\nelse "),i<t-1&&(e+=`if(test == ${i}.0){}`);return e}const i={fragmentShader:"\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture[%count%];\n\nvoid main (void)\n{\n    vec4 color;\n\n    %forloop%\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}",vertexShader:"\nprecision highp float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}"};class s{constructor(t,e={}){this.renderer=t,this.gl=t.gl;const{batchSize:s=4096,dataSize:r=4,indexSize:n=4,vertexElementSize:h=6,quadIndexSize:o=6,fragmentShader:a=i.fragmentShader,vertexShader:c=i.vertexShader}=e;this.batchSize=s,this.dataSize=r,this.indexSize=n,this.vertexElementSize=h,this.vertexByteSize=h*r,this.quadByteSize=4*this.vertexByteSize,this.quadElementSize=4*h,this.quadIndexSize=o,this.bufferByteSize=s*this.quadByteSize,this.createBuffers(),this.createShaders(a,c),this.count=0}createBuffers(){let t=[];for(let e=0;e<this.batchSize*this.indexSize;e+=this.indexSize)t.push(e+0,e+1,e+2,e+2,e+3,e+0);this.data=new ArrayBuffer(this.bufferByteSize),this.index=new Uint16Array(t),this.vertexViewF32=new Float32Array(this.data),this.vertexViewU32=new Uint32Array(this.data);const e=this.gl;this.vertexBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,this.data,e.DYNAMIC_DRAW),this.indexBuffer=e.createBuffer(),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.index,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),t=[]}createShaders(t,e){const i=this.gl,s=this.renderer.maxTextures;let r="";if(s>1){for(let t=0;t<s;t++)t>0&&(r+="\nelse "),t<s-1&&(r+=`if (vTextureId < ${t}.5)`),r+="\n{",r+=`\n  color = texture2D(uTexture[${t}], vTextureCoord);`,r+="\n}";t=(t=t.replace(/%count%/gi,`${s}`)).replace(/%forloop%/gi,r)}else r="color = texture2D(uTexture[0], vTextureCoord);";const n=i.createShader(i.FRAGMENT_SHADER);i.shaderSource(n,t),i.compileShader(n);const h=i.createShader(i.VERTEX_SHADER);i.shaderSource(h,e),i.compileShader(h);const o=i.createProgram();i.attachShader(o,h),i.attachShader(o,n),i.linkProgram(o),i.useProgram(o),this.program=o;const a=i.getAttribLocation(o,"aVertexPosition"),c=i.getAttribLocation(o,"aTextureCoord"),u=i.getAttribLocation(o,"aTextureId"),d=i.getAttribLocation(o,"aTintColor");i.enableVertexAttribArray(a),i.enableVertexAttribArray(c),i.enableVertexAttribArray(u),i.enableVertexAttribArray(d),this.attribs={position:a,textureCoord:c,textureIndex:u,color:d},this.uniforms={projectionMatrix:i.getUniformLocation(o,"uProjectionMatrix"),cameraMatrix:i.getUniformLocation(o,"uCameraMatrix"),textureLocation:i.getUniformLocation(o,"uTexture")}}bind(t,e){const i=this.gl,s=this.renderer,r=this.uniforms;i.useProgram(this.program),i.uniformMatrix4fv(r.projectionMatrix,!1,t),i.uniformMatrix4fv(r.cameraMatrix,!1,e),i.uniform1iv(r.textureLocation,s.textureIndex),this.bindBuffers(this.indexBuffer,this.vertexBuffer)}bindBuffers(t,e){const i=this.gl,s=this.vertexByteSize,r=this.attribs;i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t),i.bindBuffer(i.ARRAY_BUFFER,e),i.vertexAttribPointer(r.position,2,i.FLOAT,!1,s,0),i.vertexAttribPointer(r.textureCoord,2,i.FLOAT,!1,s,8),i.vertexAttribPointer(r.textureIndex,1,i.FLOAT,!1,s,16),i.vertexAttribPointer(r.color,4,i.UNSIGNED_BYTE,!0,s,20),this.count=0}flush(){const t=this.count;if(0===t)return!1;const e=this.gl,i=t*this.quadByteSize;if(i===this.bufferByteSize)e.bufferData(e.ARRAY_BUFFER,this.data,e.DYNAMIC_DRAW);else{let t=this.vertexViewF32.subarray(0,i);e.bufferSubData(e.ARRAY_BUFFER,0,t)}return e.drawElements(e.TRIANGLES,t*this.quadIndexSize,e.UNSIGNED_SHORT,0),this.count=0,!0}}let r;var n={get:function(){return r},set:function(t){r=t}};class h{constructor(t,e,i){this.contextOptions={alpha:!1,antialias:!1,premultipliedAlpha:!1,stencil:!1,preserveDrawingBuffer:!0,desynchronized:!0},this.clearColor=[0,0,0,1],this.maxTextures=0,this.currentActiveTexture=0,this.startActiveTexture=0,this.clearBeforeRender=!0,this.optimizeRedraw=!0,this.autoResize=!0,this.contextLost=!1,this.width=t,this.height=e,this.resolution=i;const r=document.createElement("canvas");r.addEventListener("webglcontextlost",t=>this.onContextLost(t),!1),r.addEventListener("webglcontextrestored",()=>this.onContextRestored(),!1),this.canvas=r,this.initContext(),this.shader=new s(this)}initContext(){const t=this.canvas.getContext("webgl",this.contextOptions);n.set(t),this.gl=t,this.elementIndexExtension=t.getExtension("OES_element_index_uint"),this.getMaxTextures(),this.shader&&(this.shader.gl=t),t.disable(t.DEPTH_TEST),t.disable(t.CULL_FACE),this.resize(this.width,this.height,this.resolution)}resize(t,e,i=1){this.width=t*i,this.height=e*i,this.resolution=i;const s=this.canvas;s.width=this.width,s.height=this.height,this.autoResize&&(s.style.width=this.width/i+"px",s.style.height=this.height/i+"px"),this.gl.viewport(0,0,this.width,this.height),this.projectionMatrix=function(t,e,i=-1,s=1){return new Float32Array([1/-t*-2,0,0,0,0,1/e*-2,0,0,0,0,1/(i-s)*2,0,-1,1,0,1])}(t,e)}onContextLost(t){t.preventDefault(),this.contextLost=!0}onContextRestored(){this.contextLost=!1,this.initContext()}setBackgroundColor(t){const e=this.clearColor,i=t>>16&255,s=t>>8&255,r=255&t,n=t>16777215?t>>>24:255;return e[0]=i/255,e[1]=s/255,e[2]=r/255,e[3]=n/255,this}getMaxTextures(){const i=this.gl;let s=function(i,s){const r=s.createShader(s.FRAGMENT_SHADER);for(;;){const n=t.replace(/%forloop%/gi,e(i));if(s.shaderSource(r,n),s.compileShader(r),s.getShaderParameter(r,s.COMPILE_STATUS))break;i=i/2|0}return i}(i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),i);for(let t=0;t<s;t++){let e=i.createTexture();i.activeTexture(i.TEXTURE0+t),i.bindTexture(i.TEXTURE_2D,e),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,new Uint8Array([0,0,255,255]))}this.maxTextures=s,this.textureIndex=Array.from(Array(s).keys()),this.activeTextures=Array(s),this.currentActiveTexture=0}reset(t=null,e=this.width,i=this.height){const s=this.gl;s.bindFramebuffer(s.FRAMEBUFFER,t),s.viewport(0,0,e,i),s.enable(s.BLEND),s.blendFunc(s.ONE,s.ONE_MINUS_SRC_ALPHA),this.currentActiveTexture=0,this.startActiveTexture++}render(t,e){if(this.contextLost)return;const i=this.gl;if(this.reset(),this.optimizeRedraw&&0===e)return;const s=this.shader,r=this.clearColor;let n;this.clearBeforeRender&&(i.clearColor(r[0],r[1],r[2],r[3]),i.clear(i.COLOR_BUFFER_BIT));const h=this.projectionMatrix;for(let e=0;e<t.length;e+=2){let i=t[e],r=t[e+1],c=r.length;if(0!==c){n&&(o=i.worldTransform,a=n.worldTransform,o.a===a.a&&o.b===a.b&&o.c===a.c&&o.d===a.d&&o.tx===a.tx&&o.ty===a.ty)||(s.flush(),s.bind(h,i.matrix),n=i);for(let t=0;t<c;t++)r[t].renderWebGL(this,s,this.startActiveTexture)}}var o,a;s.flush()}requestTexture(t){const e=this.gl;t.glIndexCounter=this.startActiveTexture,this.currentActiveTexture<this.maxTextures?(this.activeTextures[this.currentActiveTexture]=t,t.glIndex=this.currentActiveTexture,e.activeTexture(e.TEXTURE0+this.currentActiveTexture),e.bindTexture(e.TEXTURE_2D,t.glTexture),this.currentActiveTexture++):(this.shader.flush(),this.activeTextures[0]=t,t.glIndex=0,t.glIndexCounter++,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t.glTexture),this.currentActiveTexture=1,this.startActiveTexture++)}}class o{constructor(t,e){this.game=t,t.scenes.init(this,e)}}function a(t,e){let i=t;return e.forEach(t=>{i=t(i)}),i}function c(t){return class extends t{constructor(){super(...arguments),this._alpha=1}setAlpha(t=1){return t!==this._alpha&&(this._alpha=t,this.setDirty()),this}get alpha(){return this._alpha}set alpha(t){t!==this._alpha&&(this._alpha=t,this.setDirty())}}}function u(t){return class extends t{constructor(...t){super(t),this.children=[],this.isParent=!0}getChildren(){return this.children}addChild(...t){return t.forEach(t=>{this.addChildAt(t,this.children.length)}),this}addChildAt(t,e){return e>=0&&e<=this.children.length&&(t.parent&&t.parent.removeChild(t),t.setParent(this),this.children.splice(e,0,t),t.updateTransform()),t}swapChildren(t,e){if(t===e)return this;const i=this.getChildIndex(t),s=this.getChildIndex(e);if(i<0||s<0)throw new Error("swap: Both children must belong to the same parent");return this.children[i]=e,this.children[s]=t,this}getChildIndex(t){const e=this.children.indexOf(t);if(-1===e)throw new Error("Supplied DisplayObject not child of the caller");return e}setChildIndex(t,e){const i=this.children;if(e<0||e>=i.length)throw new Error("Index "+e+" out of bounds");const s=this.getChildIndex(t);return i.splice(s,1),i.splice(e,0,t),this}getChildAt(t){if(t<0||t>=this.numChildren)throw new Error("Index "+t+" out of bounds");return this.children[t]}removeChild(t){const e=this.children.indexOf(t);if(-1!==e)return this.removeChildAt(e)}removeChildAt(t){const e=this.getChildAt(t);return e&&(e.parent=void 0,e.updateTransform(),this.children.splice(t,1)),e}removeChildren(t=0,e){const i=this.children;void 0===e&&(e=i.length);const s=e-t;if(s>0&&s<=e){const e=i.splice(t,s);return e.forEach(t=>{t.parent=void 0,t.updateTransform()}),e}if(0===s&&0===i.length)return[];throw new Error("Range Error. Values out of bounds")}update(t,e){const i=this.children;for(let s=0;s<i.length;s++)i[s].update(t,e)}get numChildren(){return this.children.length}}}function d(t){return class extends t{constructor(){super(...arguments),this.dirty=!0,this.dirtyFrame=0}setDirty(t=!0){return this.dirty=!0,t&&(this.dirtyFrame=this.scene.game.frame),this}}}function l(t){return class extends t{constructor(){super(...arguments),this.inputEnabled=!1,this.inputEnabledChildren=!0}setInteractive(t){return this.inputEnabled=!0,this.inputHitArea=t,this.inputEnabledChildren=!0,this}}}class x{constructor(t=0,e=0){this.set(t,e)}set(t=0,e=0){return this.x=t,this.y=e,this}zero(){return this.set()}getArray(){return[this.x,this.y]}fromArray(t){return this.set(t[0],t[1])}[Symbol.iterator](){return this.getArray()[Symbol.iterator]()}}function f(t){return class extends t{constructor(){super(...arguments),this._origin=new x(.5,.5)}setOrigin(t,e=t){return this._origin.set(t,e),this}get originX(){return this._origin.x}set originX(t){this._origin.x=t}get originY(){return this._origin.y}set originY(t){this._origin.y=t}}}function p(t){return class extends t{constructor(){super(...arguments),this.isParent=!1}setParent(t){return this.parent=t,this}update(t,e){}}}function g(t){return class extends t{constructor(){super(...arguments),this._position=new x}setPosition(t,e=t){return this._position.set(t,e),this.updateTransform()}set x(t){this._position.x=t,this.updateTransform()}get x(){return this._position.x}set y(t){this._position.y=t,this.updateTransform()}get y(){return this._position.y}}}function m(t){return class extends t{constructor(...t){super(t),this._alpha=1,this.vertexAlpha=new Float32Array(4).fill(1)}setAlpha(t=1,e=t,i=t,s=t){const r=this.vertexAlpha;return r[0]=t,r[1]=e,r[2]=i,r[3]=s,this.packColors()}get alpha(){return this._alpha}set alpha(t){this._alpha=t,this.setAlpha(t)}}}function T(t){return class extends t{constructor(...t){super(t),this._tint=16777215,this.vertexTint=new Uint32Array(4).fill(16777215)}setTint(t=16777215,e=t,i=t,s=t){const r=this.vertexTint;return r[0]=t,r[1]=e,r[2]=i,r[3]=s,this.packColors()}get tint(){return this._tint}set tint(t){this._tint=t,this.setTint(t)}}}function v(t){return class extends t{constructor(){super(...arguments),this.renderable=!0}setRenderable(t){return this.renderable=t,this}willRender(){return this.visible&&this.renderable&&this.alpha>0&&this.hasTexture}}}function _(t){return class extends t{constructor(){super(...arguments),this._rotation=0}setRotation(t){return t!==this._rotation&&(this._rotation=t,this.updateCache()),this}set rotation(t){t!==this._rotation&&(this._rotation=t,this.updateCache())}get rotation(){return this._rotation}}}function y(t){return class extends t{constructor(){super(...arguments),this._scale=new x(1,1)}setScale(t,e=t){return this._scale.set(t,e),this.updateCache()}set scaleX(t){t!==this._scale.x&&(this._scale.x=t,this.updateCache())}get scaleX(){return this._scale.x}set scaleY(t){t!==this._scale.y&&(this._scale.y=t,this.updateCache())}get scaleY(){return this._scale.y}}}function w(t){return class extends t{setScene(t){return this.scene=t,this}}}function E(t){return class extends t{setSize(t,e){return this.width=t,this.height=e,this}}}function S(t){return class extends t{constructor(){super(...arguments),this._skew=new x(0,0)}setSkew(t,e=t){return this._skew.set(t,e),this.updateCache()}set skewX(t){t!==this._skew.x&&(this._skew.x=t,this.updateCache())}get skewX(){return this._skew.x}set skewY(t){t!==this._skew.y&&(this._skew.y=t,this.updateCache())}get skewY(){return this._skew.y}}}class b{constructor(t,e,i,s,r,n){this.trimmed=!1,this.texture=t,this.key=e,this.x=i,this.y=s,this.width=r,this.height=n,this.sourceSizeWidth=r,this.sourceSizeHeight=n,this.updateUVs()}setPivot(t,e){this.pivot={x:t,y:e}}setSize(t,e){this.width=t,this.height=e,this.sourceSizeWidth=t,this.sourceSizeHeight=e,this.updateUVs()}setSourceSize(t,e){this.sourceSizeWidth=t,this.sourceSizeHeight=e}setTrim(t,e,i,s,r,n){this.trimmed=!0,this.sourceSizeWidth=t,this.sourceSizeHeight=e,this.spriteSourceSizeX=i,this.spriteSourceSizeY=s,this.spriteSourceSizeWidth=r,this.spriteSourceSizeHeight=n}updateUVs(){const{x:t,y:e,width:i,height:s}=this,r=this.texture.width,n=this.texture.height;this.u0=t/r,this.v0=e/n,this.u1=(t+i)/r,this.v1=(e+s)/n}}class A{constructor(t,e,i){this.glIndex=0,this.glIndexCounter=-1,t&&(e=t.width,i=t.height),this.image=t,this.width=e,this.height=i,this.frames=new Map,this.data={},this.add("__BASE",0,0,e,i)}add(t,e,i,s,r){if(this.frames.has(t))return null;let n=new b(this,t,e,i,s,r);return this.frames.set(t,n),this.firstFrame&&"__BASE"!==this.firstFrame.key||(this.firstFrame=n),n}get(t){if(!t)return this.firstFrame;t instanceof b&&(t=t.key);let e=this.frames.get(t);return e||(console.warn("Texture.frame missing: "+t),e=this.firstFrame),e}getFrames(t){const e=[];return t.forEach(t=>{e.push(this.get(t))}),e}getFramesInRange(t,e,i,s=0,r=""){const n=[],h=e<i?1:-1;i+=h;for(let o=e;o!==i;o+=h)n.push(t+o.toString().padStart(s,"0")+r);return this.getFrames(n)}setSize(t,e){this.width=t,this.height=e,this.frames.get("__BASE").setSize(t,e)}}function R(t){return class extends t{constructor(){super(...arguments),this.hasTexture=!1,this._prevTextureID=-1}setTexture(t,e){return this.texture=t instanceof A?t:this.scene.game.textures.get(t),this.texture?this.setFrame(e):console.warn("Invalid Texture key: "+t),this}setFrame(t){const e=this.texture.get(t);if(e===this.frame)return this;this.frame=e,this.setSize(e.sourceSizeWidth,e.sourceSizeHeight),e.pivot&&this.setOrigin(e.pivot.x,e.pivot.y);const i=this.vertexData;return i[2]=e.u0,i[3]=e.v0,i[8]=e.u0,i[9]=e.v1,i[14]=e.u1,i[15]=e.v1,i[20]=e.u1,i[21]=e.v0,this.setDirty(),this.hasTexture=!0,this}}}function C(t){return class extends t{constructor(...t){super(t),this.localTransform={a:1,b:0,c:0,d:1,tx:0,ty:0},this.worldTransform={a:1,b:0,c:0,d:1,tx:0,ty:0}}updateCache(){const t=this.localTransform,{rotation:e,skewX:i,skewY:s,scaleX:r,scaleY:n}=this;return t.a=Math.cos(e+s)*r,t.b=Math.sin(e+s)*r,t.c=-Math.sin(e-i)*n,t.d=Math.cos(e-i)*n,this.updateTransform()}updateTransform(){this.setDirty();const t=this.parent,e=this.localTransform,i=this.worldTransform;if(e.tx=this.x,e.ty=this.y,!t)return i.a=e.a,i.b=e.b,i.c=e.c,i.d=e.d,i.tx=e.tx,i.ty=e.ty,this;const s=t.worldTransform;let{a:r,b:n,c:h,d:o,tx:a,ty:c}=e;return i.a=r*s.a+n*s.c,i.b=r*s.b+n*s.d,i.c=h*s.a+o*s.c,i.d=h*s.b+o*s.d,i.tx=a*s.a+c*s.c+s.tx,i.ty=a*s.b+c*s.d+s.ty,this}localToGlobal(t,e,i=new x){return function(t,e,i,s=new x){const{a:r,b:n,c:h,d:o,tx:a,ty:c}=t;return s.x=r*e+h*i+a,s.y=n*e+o*i+c,s}(this.worldTransform,t,e,i)}globalToLocal(t,e,i=new x){return function(t,e,i,s=new x){const{a:r,b:n,c:h,d:o,tx:a,ty:c}=t,u=1/(r*o+h*-n);return s.x=o*u*e+-h*u*i+(c*h-a*o)*u,s.y=r*u*i+-n*u*e+(-c*r+a*n)*u,s}(this.worldTransform,t,e,i)}}}function B(t){return class extends t{constructor(){super(...arguments),this.visible=!0}setVisible(t){return this.visible=t,this}}}class F extends(a(class{},[c,d,p,l,f,g,v,_,y,w,E,S,C,B])){constructor(t,e=0,i=0){super(),this.scene=t,this._position.set(e,i),this.dirty=!0,this.name=""}}class I extends(a(F,[u])){constructor(t,e=0,i=0){super(),this.setScene(t),this.setPosition(e,i)}update(t,e){const i=this.children;for(let s=0;s<i.length;s++)i[s].update(t,e)}updateTransform(){super.updateTransform();const t=this.children;for(let e=0;e<t.length;e++)t[e].updateTransform();return this}}class z extends F{constructor(t,e=0,i=0){super(t,e,i),this.renderer=t.game.renderer,this.matrix=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.setSize(this.renderer.width,this.renderer.height)}updateTransform(){this.setDirty();const t=this.localTransform,e=this.worldTransform;t.tx=this.x,t.ty=this.y;const i=this.matrix,{a:s,b:r,c:n,d:h,tx:o,ty:a}=t,c=this.renderer.width*this.originX,u=this.renderer.height*this.originY;return i[0]=s,i[1]=r,i[4]=n,i[5]=h,i[12]=s*-c+n*-u+(c+o),i[13]=r*-c+h*-u+(u+a),e.a=s,e.b=r,e.c=n,e.d=h,e.tx=i[12],e.ty=i[13],this}}class D extends I{constructor(t,e){super(t),this.dirtyFrame=0,this.totalFrame=0,this.name=e,this.renderList=[],this.camera=new z(t,0,0)}scanChildren(t,e){const i=t.getChildren();for(let t=0;t<i.length;t++)this.buildRenderList(i[t],e)}buildRenderList(t,e){t.willRender()&&(this.renderList.push(t),t.dirtyFrame>=e&&this.dirtyFrame++),t.isParent&&this.scanChildren(t,e)}update(t,e){const i=this.children;for(let s=0;s<i.length;s++)i[s].update(t,e)}render(t){return this.dirtyFrame=0,this.renderList.length=0,this.scanChildren(this,t),this.totalFrame=this.renderList.length,this.camera.dirtyFrame>=t&&this.dirtyFrame++,this.dirtyFrame}}function k(){}function L(t,e,i){return t[e]?t[e]:i}class U{constructor(t,e,i=!1){this.callback=t,this.context=e,this.once=i}}class M{constructor(){this._events=new Map}on(t,e,i=this,s=!1){if("function"!=typeof e)throw new TypeError("The listener must be a function");const r=new U(e,i,s),n=this._events.get(t);return n?n.add(r):this._events.set(t,new Set([r])),this}once(t,e,i=this){return this.on(t,e,i,!0)}clearEvent(t){return this._events.delete(t),this}eventNames(){return[...this._events.keys()]}listeners(t){const e=[];return this._events.get(t).forEach(t=>{e.push(t.callback)}),e}listenerCount(t){const e=this._events.get(t);return e?e.size:0}emit(t,...e){if(!this._events.has(t))return!1;const i=this._events.get(t);for(const t of i)t.callback.apply(t.context,e),t.once&&i.delete(t);return 0===i.size&&this._events.delete(t),!0}off(t,e,i,s){if(e){const r=this._events.get(t),n=!i,h=void 0!==s;for(const t of r)t.callback===e&&n&&t.context===console&&h&&t.once===s&&r.delete(t);0===r.size&&this._events.delete(t)}else this._events.delete(t);return this}removeAllListeners(t){t?this._events.delete(t):this._events.clear()}}class P extends M{constructor(t){super(),this.flush=!1,this.dirtyFrame=0,this.totalFrame=0,this.sceneIndex=0,this._isDuplicate=!1,this.game=t,this.classes=new Map,this.scenes=new Map,this.renderList=[],this.on("init",this.init,this)}boot(t){t.forEach(t=>{this.add(t)})}init(t,e={}){const i=this.sceneIndex,s={index:i,key:"",active:!1,visible:!1},r=this.scenes.size;"string"==typeof e?(s.key=e,0===r&&(s.active=!0,s.visible=!0)):(e||!e&&0===r)&&(s.key=L(e,"key","scene"+i),s.active=L(e,"active",0===r),s.visible=L(e,"visible",s.active)),this._tempKey&&(s.key=this._tempKey,this._tempKey=null),this.keyExists(s.key)?console.warn("Cannot add scene with duplicate key: "+s.key):(t.game=this.game,t.world=new D(t,s.key),this._isDuplicate||(this.classes.set(s.key,this._tempScene),this._isDuplicate=!1),this.scenes.set(function(t,e,i){return{index:t,key:e.world.name,scene:e,active:i.active,visible:i.visible,boot:L(e,"boot",k),update:L(e,"update",k),shutdown:L(e,"shutdown",k)}}(i,t,s),t),this.flush=!0,this.sceneIndex++)}add(t,e){return this._tempScene=t,this._tempKey=e,t=new t(this.game)}update(t,e){for(const[i,s]of this.scenes)i.active&&(i.update.call(i.scene,t,e),s.world.update(t,e))}render(t){const e=this.renderList;e.length=0,this.dirtyFrame=0,this.totalFrame=0;for(const[i,s]of this.scenes)if(i.visible){let i=s.world;this.dirtyFrame+=i.render(t),this.totalFrame+=i.totalFrame,e.push(i.camera),e.push(i.renderList)}return this.flush&&(this.dirtyFrame++,this.flush=!1),this.dirtyFrame}getScene(t){const e=this.getSceneRunner(t);if(e)return e.scene}getSceneRunner(t){const e=this.getSceneKey(t);for(const t of this.scenes.keys())if(t.key===e)return t}getSceneKey(t){return t instanceof o?t.world.name:t}spawn(t,e,i=!0){let s=this.classes.get(t);if(s){this._isDuplicate=!0;const t=this.add(s,e);return i&&this.wake(t),t}}start(t,e){const i=this.getSceneRunner(t);i&&(t=i.scene,this.wake(t),i.boot.call(t),this.emit("boot",t),e&&this.stop(e),this.flush=!0)}stop(t){const e=this.getSceneRunner(t);e&&(t=e.scene,this.sleep(t),e.shutdown.call(t),this.emit("shutdown",t),this.flush=!0)}sleep(t){this.setActive(t,!1),this.setVisible(t,!1),this.flush=!0}wake(t){this.setActive(t),this.setVisible(t),this.flush=!0}setActive(t,e=!0){const i=this.getSceneRunner(t);i&&(i.active=e)}setVisible(t,e=!0){const i=this.getSceneRunner(t);i&&(i.visible=e)}keyExists(t){const e=this.getSceneKey(t);for(const t of this.scenes.keys())if(t.key===e)return!0;return!1}getTotal(){return this.scenes.size}}function N(t,e){const i=document.createElement("canvas");return i.width=t,i.height=e,i.getContext("2d")}function X(t,e,i,s,r=!0){const n=t.createTexture();t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,n),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),e?(t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),i=e.width,s=e.height):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,s,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR);const h=e&&function(t,e){return!(t<1||e<1)&&(0==(t&t-1)&&0==(e&e-1))}(i,s),o=h&&r?t.REPEAT:t.CLAMP_TO_EDGE;return t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,o),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,o),h&&t.generateMipmap(t.TEXTURE_2D),n}class Y{constructor(){this.textures=new Map,this.createDefaultTextures()}createDefaultTextures(){this.add("__BLANK",new A(N(32,32).canvas));const t=N(32,32);t.strokeStyle="#0f0",t.moveTo(0,0),t.lineTo(32,32),t.stroke(),t.strokeRect(.5,.5,31,31),this.add("__MISSING",new A(t.canvas))}get(t){return this.textures.has(t)?this.textures.get(t):this.textures.get("__MISSING")}has(t){return this.textures.has(t)}add(t,e){let i;return this.textures.has(t)||(i=e instanceof A?e:new A(e),i.key=t,i.glTexture||(i.glTexture=X(n.get(),i.image)),this.textures.set(t,i)),i}}class G extends M{constructor(t){super(),this.VERSION="4.0.0-beta1",this.isPaused=!1,this.isBooted=!1,this.lifetime=0,this.elapsed=0,this.frame=0;const{width:e=800,height:i=600,resolution:s=1,backgroundColor:r=0,parent:n=document.body,scene:h=null}=t;this.config={width:e,height:i,resolution:s,backgroundColor:r,parent:n,scene:h},this.cache={json:new Map,csv:new Map,xml:new Map},function(t){if("complete"===document.readyState||"interactive"===document.readyState)return void t();const e=()=>{document.removeEventListener("deviceready",e,!0),document.removeEventListener("DOMContentLoaded",e,!0),window.removeEventListener("load",e,!0),t()};document.body?window.hasOwnProperty("cordova")?document.addEventListener("deviceready",e,!0):(document.addEventListener("DOMContentLoaded",e,!0),window.addEventListener("load",e,!0)):window.setTimeout(e,20)}(()=>this.boot())}pause(){this.isPaused=!0,this.emit("pause")}resume(){this.isPaused=!1,this.lastTick=Date.now(),this.emit("resume")}boot(){const t=this.config;this.isBooted=!0,this.lastTick=Date.now();const e=new h(t.width,t.height,t.resolution);e.setBackgroundColor(t.backgroundColor),function(t,e){let i;if(e)"string"==typeof e?i=document.getElementById(e):"object"==typeof e&&1===e.nodeType&&(i=e);else if(t.parentElement)return t;i||(i=document.body),i.appendChild(t)}(e.canvas,t.parent),this.renderer=e,this.textures=new Y,this.scenes=new P(this),this.banner(this.VERSION),this.scenes.boot([].concat(t.scene)),document.addEventListener("visibilitychange",()=>{this.emit("visibilitychange",document.hidden),document.hidden?this.pause():this.resume()}),this.emit("boot"),requestAnimationFrame(()=>this.step())}banner(t){console.log("%c %cPhaser Nano v"+t+"%c https://phaser4.io","padding: 2px; background: linear-gradient(to right, #00bcc3, #3e0081)","padding: 2px 20px 2px 8px; color: #fff; background: linear-gradient(to right, #3e0081 90%, #3e0081 10%, #00bcc3)","")}step(){const t=Date.now(),e=(t-this.lastTick)/1e3;this.lifetime+=e,this.elapsed=e,this.lastTick=t,this.emit("step",e,t);const i=this.scenes;this.isPaused||i.update(e,t),this.emit("update",e,t);const s=i.render(this.frame);this.renderer.render(i.renderList,s),this.emit("render",e,t),this.frame++,requestAnimationFrame(()=>this.step())}destroy(){}}function V(t,e){return((255&(255*e|0))<<24|t)>>>0}class O extends(a(F,[u,m,T,R])){constructor(t,e,i,s,r){super(),this.vertexData=new Float32Array(24).fill(0),this.vertexColor=new Uint32Array(4).fill(4294967295),this.setScene(t),this.setTexture(s,r),this.setPosition(e,i)}packColors(){const t=this.vertexAlpha,e=this.vertexTint,i=this.vertexColor;return i[0]=V(e[0],t[0]),i[1]=V(e[1],t[1]),i[2]=V(e[2],t[2]),i[3]=V(e[3],t[3]),this.setDirty(),this}renderWebGL(t,e,i){const s=this.texture;s.glIndexCounter<i&&t.requestTexture(s),e.count===e.batchSize&&e.flush(),this.updateVertices(e.vertexViewF32,e.vertexViewU32,e.count*e.quadElementSize),e.count++}updateVertices(t,e,i){const s=this.vertexData;if(this.dirty){this.dirty=!1;const t=this.frame,e=this._origin;let i,r,n,h;const{a:o,b:a,c:c,d:u,tx:d,ty:l}=this.worldTransform;t.trimmed?(r=t.spriteSourceSizeX-e.x*t.sourceSizeWidth,i=r+t.spriteSourceSizeWidth,h=t.spriteSourceSizeY-e.y*t.sourceSizeHeight,n=h+t.spriteSourceSizeHeight):(r=-e.x*t.sourceSizeWidth,i=r+t.sourceSizeWidth,h=-e.y*t.sourceSizeHeight,n=h+t.sourceSizeHeight),s[0]=r*o+h*c+d,s[1]=r*a+h*u+l,s[6]=r*o+n*c+d,s[7]=r*a+n*u+l,s[12]=i*o+n*c+d,s[13]=i*a+n*u+l,s[18]=i*o+h*c+d,s[19]=i*a+h*u+l}const r=this.texture.glIndex;r!==this._prevTextureID&&(this._prevTextureID=r,s[4]=r,s[10]=r,s[16]=r,s[22]=r),t.set(s,i);const n=this.vertexColor;e[i+5]=n[0],e[i+11]=n[2],e[i+17]=n[3],e[i+23]=n[1]}}class W extends O{constructor(t,e,i,s){super(t,e,i,function(t="rgba(0,0,0,0)",e=32,i=32){const s=N(e,i);return s.fillStyle=t,s.fillRect(0,0,e,i),new A(s.canvas)}()),this.splitRegExp=/(?:\r\n|\r|\n)/,this.padding={left:0,right:0,top:0,bottom:0},this.lineSpacing=0,this._text=s,this._canvas=this.texture.image,this._ctx=this._canvas.getContext("2d"),this.texture.glTexture=X(n.get(),this._canvas,32,32,!1),this.resolution=window.devicePixelRatio||1,this.updateText()}updateText(){const t=this._canvas,e=this._ctx,i=this.resolution;let s=this._text;e.font="16px monospace",e.textBaseline="alphabetic";const r=e.measureText(s);let h=Math.ceil(r.width),o=Math.ceil(r.actualBoundingBoxAscent+r.actualBoundingBoxDescent);h=Math.max(h*i,1),o=Math.max(o*i,1),t.width===h&&t.height===o||(t.width=h,t.height=o,this.texture.setSize(h,o)),e.save(),e.scale(i,i),e.font="16px monospace",e.textBaseline="alphabetic",e.fillStyle="#0f0",e.fillText(this._text,0,r.actualBoundingBoxAscent),e.restore(),function(t,e,i,s=!1){const r=e.width,n=e.height;r>0&&n>0&&(t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,i),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e))}(n.get(),t,this.texture.glTexture)}setText(t){t||(t=""),Array.isArray(t)&&(t=t.join("\n")),t!==this._text&&(this._text=t.toString(),this.updateText())}}class H extends o{constructor(t){super(t);const e=new W(this,400,300,"Welcome to Phaser Nano");e.setSkew(.2,0),this.world.addChild(e)}}new G({width:800,height:600,resolution:window.devicePixelRatio,backgroundColor:51,parent:"gameParent",scene:H})}();
//# sourceMappingURL=index.min.js.map
